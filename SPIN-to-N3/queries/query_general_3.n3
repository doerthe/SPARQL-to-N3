@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix spin: <http://spinrdf.org/spin#>.
@prefix sp: <http://spinrdf.org/sp#>.
@prefix ex: <http://example.org/spin#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix aux: <http://example.org/aux#>.

## construct
{   ?x a       sp:Construct ;
      sp:templates ?temps ;
      sp:where ?where.
    ?x aux:subtest false.
 	   (false ?where) aux:createGraph ?g1.
     ?g1 aux:addOptionalEvaluation ?g22.
     (false ?temps) aux:handleTriples ?g2
	}=>{?g22=>?g2. }.

## ask
  {   ?x a       sp:Ask ;
        sp:where ?where.
    ?x aux:subtest false.
   	    (false ?where) aux:createGraph ?g1.
     ?x log:skolem ?x2.
     ?g1 aux:addOptionalEvaluation ?g2.
  	}=>{?g2 => {?x2 ex:result true}. {(1 ?g2 ()) log:collectAllIn ?scope}=>{?x2 ex:result false}
    }.

## select
{   ?x a       sp:Select .

    ?x  sp:where ?where.
   # only if this is no sub-query 
   ?x aux:subtest false.

    #get result variables 
    ?x aux:getResultVariables ?outvars.
 
    #handle graph
   (false ?where) aux:createGraph ?g1.

   #add unification step for optional if needed
    ?g1 aux:addOptionalEvaluation ?g2. 

    #handle aggregation
    (?x ?g2) aux:handleAggregation ?g.
    ?x log:skolem ?x2.
  }=>{?g => {?x2 ex:result ?outvars}.
  }.





