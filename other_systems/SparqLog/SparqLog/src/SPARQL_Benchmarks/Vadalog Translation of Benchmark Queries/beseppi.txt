% Query 0:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 1:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 2:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 3:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 4:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 5:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 6:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v3>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W).
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 7:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W).
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 8:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W).
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 9:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v3>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W).
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 10:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W).
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 11:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W).
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 12:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v3>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W).
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 13:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 14:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 15:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 16:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 17:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 18:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
ans9(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 19:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 20:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 21:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting3>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 22:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 23:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 24:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 25:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting3>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 26:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 27:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 28:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 29:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 30:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 31:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 32:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 33:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 34:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 35:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 36:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+3>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 37:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+6>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 38:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 39:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 40:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 41:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisiting>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 42:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 43:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 44:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 45:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e7>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 46:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 47:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+3>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 48:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+6>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 49:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 50:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "".
ans4(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default").
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default").
ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default").
ans16(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 51:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 52:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 53:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 54:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 55:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e3>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 56:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 57:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 58:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 59:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting2>", DType_Y = "URI", LTag_Y = "".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 60:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 61:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e3>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 62:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 63:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 64:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 65:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 66:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/notExisting2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 67:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 68:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e5>".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e3>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 69:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting2>".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 70:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 71:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e6>".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 72:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(HasResult) :- ans_ask1(HasResult).
ans1(HasResult) :- not ans_ask1(#T), HasResult = #F.
ans_ask1(HasResult) :- ans2("default"), HasResult = #T.
ans2("default") :- ans4(L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_X = "<http://www.ppbenchmark.com/v3>", DType_X = "URI", LTag_X = "", L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "".
ans4(L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e3>".
ans8(L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default").
@include("RDF Triples").
@output("ans1").

% Query 73:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 74:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 75:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 76:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 77:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 78:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v3>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e4>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e4>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 79:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 80:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 81:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e5>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e5>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 82:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 83:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 84:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 85:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 86:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e5>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e5>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 87:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 88:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 89:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 90:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 91:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 92:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 93:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 94:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 95:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/notExisting1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 96:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v3>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 97:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 98:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 99:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 100:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 101:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 102:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 103:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 104:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 105:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 106:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 107:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 108:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 109:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 110:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 111:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 112:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 113:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 114:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/v1>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 115:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 116:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 117:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 118:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 119:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 120:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 121:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 122:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting1>", L_Path != "<http://www.ppbenchmark.com/notExisting2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 123:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 124:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 125:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e3>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 126:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 127:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 128:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e6>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 129:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, "default") :- ans2(ID2, L_o, DType_o, LTag_o, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, ID2].
ans2(ID2, L_o, DType_o, LTag_o, "default") :- ans4(ID4, L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, "default"), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID2 = ["f2", L_X, DType_X, LTag_X, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e5>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 130:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 131:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 132:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 133:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 134:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 135:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v3>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 136:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v4>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 137:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 138:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 139:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 140:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 141:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e5>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e5>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 142:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v7>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e7>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e7>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e6>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e6>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 143:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 144:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 145:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 146:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 147:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 148:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 149:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 150:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 151:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 152:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/notExisting2>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 153:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 154:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 155:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 156:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 157:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 158:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v+3>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 159:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v+6>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 160:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 161:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 162:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 163:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 164:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/notExisting>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 165:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v2>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 166:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v+3>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+3>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 167:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v+6>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+6>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 168:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 169:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v+1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :-  not term(L_X, DType_X, LTag_X), L_X = "<http://www.ppbenchmark.com/v+1>", DType_X = "URI", LTag_X = "", ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 170:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 171:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 172:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 173:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 174:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 175:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 176:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 177:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 178:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 179:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 180:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 181:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/notExisting>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 182:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 183:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 184:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v1>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 185:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e6>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 186:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, "default"), L_Y = "<http://www.ppbenchmark.com/v2>", DType_Y = "URI", LTag_Y = "", ID2 = ["f2", L_s, DType_s, LTag_s, L_Y, DType_Y, LTag_Y, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e5>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 187:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 188:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 189:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 190:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 191:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e4>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e4>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 192:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 193:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 194:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e5>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e5>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 195:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ans9(ID9, L_W, DType_W, LTag_W, L_Y, DType_Y, LTag_Y, "default"), comp(L_Z, L_W, L_W), compD(DType_Z, DType_W, DType_W), compL(LTag_Z, LTag_W, LTag_W), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, L_W, DType_W, LTag_W, L_Z, DType_Z, LTag_Z, ID8, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 196:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 197:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e6>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e6>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e7>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e7>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 198:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 199:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 200:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["f4", L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, ID9].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
ans9(ID9, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID9 = ["f9", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 201:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 202:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 203:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 204:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 205:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 206:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 207:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 208:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 209:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 210:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 211:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans4(ID4, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans4(ID4, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 212:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e6>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e6>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 213:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/eSelf>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 214:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/notExisting>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 215:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+1>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 216:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+3>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 217:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 218:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default") :- subjectOrObject(L_X, DType_X, LTag_X), not ans8(ID8, L_X, DType_X, LTag_X, L_X, DType_X, LTag_X, "default"), ID4 = ["_distinct"].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID4 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["_distinct"].
ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default") :- ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), ans8(ID8, L_Y, DType_Y, LTag_Y, L_Z, DType_Z, LTag_Z, "default"), not ans8(ID8, L_X, DType_X, LTag_X, L_Z, DType_Z, LTag_Z, "default"), ID8 = ["_distinct"].
ans16(ID16, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y, "default"), ID16 = ["f16", L_X, DType_X, LTag_X, "<http://www.ppbenchmark.com/e+2>", "URI", "", L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 219:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 220:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 221:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 222:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting1>", L_Path != "<http://www.ppbenchmark.com/notExisting2>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 223:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e6>", L_Path != "<http://www.ppbenchmark.com/e7>", L_Path != "<http://www.ppbenchmark.com/e+>", L_Path != "<http://www.ppbenchmark.com/e+1>", L_Path != "<http://www.ppbenchmark.com/e+2>", L_Path != "<http://www.ppbenchmark.com/e+3>", L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 224:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 225:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e6>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 226:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e6>", L_Path != "<http://www.ppbenchmark.com/e7>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 227:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting1>", L_Path != "<http://www.ppbenchmark.com/notExisting2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 228:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e6>", L_Path != "<http://www.ppbenchmark.com/e7>", L_Path != "<http://www.ppbenchmark.com/e+>", L_Path != "<http://www.ppbenchmark.com/e+1>", L_Path != "<http://www.ppbenchmark.com/e+2>", L_Path != "<http://www.ppbenchmark.com/e+3>", L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 229:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 230:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 231:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e3>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e4>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 232:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting1>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/notExisting2>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 233:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e6>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 234:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e6>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

% Query 235:
@include("RDF Triples").
@include("Auxiliary Predicates").
ans1(ID1, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default"), ID1 = ["f1", L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, ID2].
ans2(ID2, L_o, DType_o, LTag_o, L_s, DType_s, LTag_s, "default") :- ans4(ID4, L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, "default"), ID2 = ["f2", L_s, DType_s, LTag_s, L_o, DType_o, LTag_o, ID4].
ans4(ID4, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e6>", L_Path != "<http://www.ppbenchmark.com/e7>", L_Path != "<http://www.ppbenchmark.com/e+>", L_Path != "<http://www.ppbenchmark.com/e+1>", L_Path != "<http://www.ppbenchmark.com/e+2>", L_Path != "<http://www.ppbenchmark.com/e+3>", L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, ID8].
ans4(ID4, L_Y, DType_Y, LTag_Y, L_X, DType_X, LTag_X, "default") :- ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default"), L_Path != "<http://www.ppbenchmark.com/e1>", L_Path != "<http://www.ppbenchmark.com/e2>", L_Path != "<http://www.ppbenchmark.com/e3>", L_Path != "<http://www.ppbenchmark.com/e4>", L_Path != "<http://www.ppbenchmark.com/e5>", L_Path != "<http://www.ppbenchmark.com/e6>", L_Path != "<http://www.ppbenchmark.com/e7>", L_Path != "<http://www.ppbenchmark.com/e+>", L_Path != "<http://www.ppbenchmark.com/e+1>", L_Path != "<http://www.ppbenchmark.com/e+2>", L_Path != "<http://www.ppbenchmark.com/e+3>", L_Path != "<http://www.ppbenchmark.com/eSelf>", ID4 = ["f4", "inv", L_Y, DType_Y, LTag_Y, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, ID8].
ans8(ID8, L_Path, DType_Path, LTag_Path, L_X, DType_X, LTag_X, L_Y, DType_Y, LTag_Y, "default") :- triple(L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y, "default"), ID8 = ["f8", L_X, DType_X, LTag_X, L_Path, DType_Path, LTag_Path, L_Y, DType_Y, LTag_Y].
@include("RDF Triples").
@output("ans1").

